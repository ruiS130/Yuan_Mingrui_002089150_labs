/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.supplier;

import model.Supplier;
import model.SupplierDirectory;
import ui.admin.ManageSuppliers;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

public class EditSuppJPanel extends JPanel {
    private JPanel workArea;
    private SupplierDirectory supplierDirectory;
    private Supplier supplier;
    private final JFileChooser fileChooser = new JFileChooser();
    ImageIcon logoImage;
    private JButton backButton;
    private JButton btnAttach;
    private JButton btnRemove;
    private JButton btnUpdateSupplier;
    private JLabel imgLogo;
    private JScrollPane jScrollPane1;
    private JTextArea jTextArea1;
    private JLabel lblDescription;
    private JLabel lblLogo;
    private JLabel lblName;
    private JLabel lblTitle;
    private JTextField txtName;

    public EditSuppJPanel(JPanel workArea, SupplierDirectory supplierDirectory, Supplier supplier) {
        this.initComponents();
        this.workArea = workArea;
        this.supplierDirectory = supplierDirectory;
        this.supplier = supplier;
        FileFilter jpegFilter = new FileNameExtensionFilter("JPEG file", new String[]{"jpg", "jpg"});
        FileFilter pngFilter = new FileNameExtensionFilter("PNG file", new String[]{"png", "png"});
        this.fileChooser.addChoosableFileFilter(jpegFilter);
        this.fileChooser.addChoosableFileFilter(pngFilter);
        this.fileChooser.setFileFilter(pngFilter);
        this.txtName.setText(supplier.getSupplyName());
        if (supplier.getLogoImage() != null) {
            ImageIcon logo = supplier.getLogoImage();
            ImageIcon logoImage = new ImageIcon(logo.getImage().getScaledInstance(150, 150, 4));
            this.imgLogo.setIcon(logoImage);
        } else {
            this.imgLogo.setText("<No Image>");
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
private void btnAttachActionPerformed(ActionEvent evt) {
        int returnVal = this.fileChooser.showOpenDialog(this);
        if (returnVal == 0) {
            File file = this.fileChooser.getSelectedFile();

            try {
                URL url = file.toURI().toURL();
                this.logoImage = new ImageIcon(url);
                this.logoImage = new ImageIcon(this.logoImage.getImage().getScaledInstance(150, 150, 4));
                this.imgLogo.setIcon(this.logoImage);
            } catch (MalformedURLException var6) {
                MalformedURLException ex = var6;
                Logger.getLogger(this.getName()).log(Level.SEVERE, (String)null, ex);
            }
        }

    }

    private void btnRemoveActionPerformed(ActionEvent evt) {
        this.logoImage = null;
        this.imgLogo.setIcon(this.logoImage);
    }

    private void btnUpdateSupplierActionPerformed(ActionEvent evt) {
        this.supplier.setSupplyName(this.txtName.getText());
        if (this.logoImage != null) {
            this.supplier.setLogoImage(this.logoImage);
        }

        JOptionPane.showMessageDialog(this, "Supplier successfully added", "Warning", 1);
        this.backAction();
    }

    private void backButtonActionPerformed(ActionEvent evt) {
        this.backAction();
    }

    private void backAction() {
        this.workArea.remove(this);
        Component[] componentArray = this.workArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        if (component instanceof UpdateSuppJPanel updatePanel) {
            updatePanel.refreshTable();
        } else if (component instanceof ManageSuppliers managePanel) {
            managePanel.refreshTable();
        }

        CardLayout layout = (CardLayout)this.workArea.getLayout();
        layout.previous(this.workArea);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
